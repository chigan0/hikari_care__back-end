"""
Django settings for hikari_care__app project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv

from .jazzmin_settings import JAZZMIN_SETTINGS, JAZZMIN_UI_TWEAKS
from django.utils.translation import get_language, gettext_lazy as _

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("SECRET_KEY")
DEBUG = os.getenv("DEBUG")
ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS").split(',') 

CORS_ALLOW_CREDENTIALS = True
CSRF_TRUSTED_ORIGINS = [
	# 'https://api.oks-group.kz',
	# 'http://demo.oks-group.kz',
	# 'https://demo.oks-group.kz',
	'http://localhost:5173',
	'http://127.0.0.1:5173',
	'http://194.4.58.237:5173',
]

CORS_ALLOWED_ORIGINS = [
	# 'http://demo.oks-group.kz',
	# 'https://demo.oks-group.kz',
	"http://194.4.58.237:5173",
	"http://localhost:5173",
	'http://127.0.0.1:5173',
]

# Application definition

INSTALLED_APPS = [
	'rest_framework',
	'jazzmin',
	"sa_modeltranslater.apps.SaModeltranslaterConfig",
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'corsheaders',
	"sa_gallery.apps.SaGalleryConfig",
	"core.apps.CoreConfig",
	"employees.apps.EmployeesConfig",
	"news.apps.NewsConfig",
	"tinymce"
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'corsheaders.middleware.CorsMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'django.middleware.locale.LocaleMiddleware',
]

ROOT_URLCONF = 'hikari_care__app.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR / 'templates'],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'hikari_care__app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
	'default': {
		# --- Default SQLite DB
		# 'ENGINE': 'django.db.backends.sqlite3',
		# 'NAME': BASE_DIR / 'db.sqlite3',
		"ENGINE": "django.db.backends.postgresql",
		"NAME": os.getenv("DB_NAME"),
		"USER": os.getenv("DB_USER"),
		"PASSWORD": os.getenv("DB_PASSWORD"),
		"HOST": os.getenv("DB_HOST"),
		"PORT": os.getenv("DB_PORT")
	}
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "ru"

TIME_ZONE = "Asia/Almaty"

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOCALE_PATHS = (
	BASE_DIR / "locale",
)

LANGUAGES = [
	( "ru", _("Russian")),
	( "kk", _("Kazakhstan")),
	( "en", _("English") )
]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"

if DEBUG:
	STATICFILES_DIRS = [BASE_DIR / "static"]

else:
	STATIC_URL = "/static/"
	STATIC_ROOT = (BASE_DIR / "static/")

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media/"


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

REST_FRAMEWORK = {
    'DEFAULT_FILTER_BACKENDS': ['django_filters.rest_framework.DjangoFilterBackend']
}

MODELTRANSLATION_DEFAULT_LANGUAGE = 'ru'


# TINYMCE Config
TINYMCE_DEFAULT_CONFIG = {
	'promotion': False,
	'branding': False,  # Отключает надпись TinyMCE со ссылкой
	'toolbar': (
		'undo redo | bold italic underline strikethrough | '
		'alignleft aligncenter alignright alignjustify | '
		'bullist numlist outdent indent | '
		'fontselect fontsizeselect | '
		'forecolor backcolor | link image media | '
		'code preview'
	),
	'plugins': 'link image media code preview lists',
	'menubar': False,  # Отключает верхнее меню
	'statusbar': False,  # Отключает статусбар
}
